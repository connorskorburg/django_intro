CREATING A DJANGO PROJECT

1.ENABLE VIRTUAL ENVIRONMENT FOR djangoPy3Env AND USE CMD 'pip freeze'
TO MAKE SURE DJANGO IS INSTALLED
2.NAVIGATE TO WHERE THE PROJECT SHOULD BE SAVED:
(Python_stack/django/django_intro)
3.RUN COMMAND django-admin startproject your_project_name_here
4.(TEST AND RUN)
	A.RUN COMMAND python manage.py runserver
	B.GO INTO URL AND TYPE 'localhost:8000'
	C.HIT ctrl + c TO STOP THE SERVER
5.CREATE APP IN THE PROJECT.
(APPS CANNOT HAVE THE SAME NAME AS PROJECT)
	A.NAVIGATE TO THE PROJECT FOLDER (your_project_name_here/)
	B.RUN COMMAND python manage.py startapp your_app_name_here
6.OPEN THE FIRST PROJECT FOLDER IN TEXT EDITOR AND FIND settings.py
(your_project_name_here/your_project_name_here/settings.py)
	A. ADD YOUR PROJECT TO THE settings.py file
	B. INSTALLED APPS = [
		'your_app_name_here',
		'django.contrib.admin', etc,
	]
7.CREATE ROUTE TO BE ASSOCIATED WITH A SPECIFIC FUNCTION
(your_project_name_here/your_project_name_here/urls.py)
	A.GO TO urls.py IN THE TEXT EDITOR AND TYPE THE CODE:
	from django.urls import path, include
	urlpatterns = [
		path('', include('your_app_name_here.urls')),
	]
8.GO TO TEXT EDITOR AND PHYSICALLY CREATE urls.py
(your_project_name_here/your_app_name_here/urls.py)f
	A.TYPE THE FOLLOWING CODE IN TEXT EDITOR:
	from django.urls import path
	from . import views
	urlpatterns = [
		path('', views.index),
	]
9.CLICK ON THE views.py FILE IN TEXT EDITOR
(your_project_name_here/your_app_name_here)
	A.PUT A FUNCTION CALLED INDEX IN THE views.py FILE:
	from django.shortcuts import render, HttpResponse
	def index(request):
		return HttpResponse("This is equivalentof @app.route('/'))
10. NOW RUN THE APP AGAIN IN 'localhost:8000/' IN URL
(your_project_name_here/)
	A.RUN COMMAND python manage.py runserver


------MORE NOTES ON PYTHON SETUP/INTRO------

--urlpatterns IS A VARIABLE THAT HOLDS A LIST OF VARIABLES THAT A
  PROJECT RECOGNIZES. IT NEEDS  2 PARAMETERS:
	1. A RAW STRING REPRESENTING THE PATH(EX: '')
	2. WHAT TO DO IF THE PATTERN MATCHES(EX: include('app_name.urls'))
	

--redirect
It's time to practice routing! Use the checklist below to add routes to your project. We haven't learned about templates yet, so just return strings via HttpResponse. Redirecting in Django is very similar to redirecting in Flask:

from django.shortcuts import HttpResponse, redirect # add redirect to import statement
def some_method(request):
	return redirect("/") 
Even though we don't include the first / in our project urls.py file, when redirecting, you should provide the whole path, starting with the first /.